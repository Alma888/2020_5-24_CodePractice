# 2020_5-24_CodePractice


//【解题思路】：
//首先由题可知：小易只想用6个或8个每袋去装刚好自己想要的个数的苹果
//           所以，又6和8都是偶数，所以小易想买的苹果个数必须是偶数个，才能刚好装满；否则将不购买
//              而偶数个苹果数对8取模，其结果只可能为0,2,4,6。若余数为6或者0，则可以直
//           接用6包装情况处理，不需要回溯购买8包装的情况。若余数为4，只需回溯1次即可，
//           因为8+4=12, 12%6 =0。若余数为2，只需回溯2次即可，因为8+8+2=18, 18%6 = 0。
//解决此题：分三个情况：
//  情况一：若num不是偶数，则直接返回-1 ;
//          num不能小于6,否则返回-1;
//          num也不能为10，num只能为6，8，12，14，16...否则返回-1;
//  情况二：若num%8 = 0，则返回num/8;

//  情况三：：若num%8 != 0，则只需回溯1次或者2次8包装购买个数，就可以求解。回溯1次，其
//            结果为n/8-1+2 = n/8+1；回溯2次，其结果为n/8-2+3 = n/8+1。
//            因此，在情况3下，可以返回n/8+1。


import java.util.Scanner;

public class day4_01 {

    public static void main(String[] args) {
        Scanner sc=new Scanner(System.in);
        int num=sc.nextInt();
        //一定是偶数（6，8都是）,最小是6，10以上偶数都可以；
        if(num%2!=0||num==10||num<6){
            System.out.println(-1);
        }else if(num%8==0){//如果拿八个拿完最好
            System.out.println(num/8);
        }else {//对于10以上的偶数，只要对8取余数不为0，
            // 就要从前面的1或者2个8中拿出2个，把余数补为6（本来余数就是6，就不用拿）。所以+1；
            System.out.println(1+num/8);
        }
    }
}
